{
  "swagger": "2.0",
  "info": {
    "description": "Desenvolvimento de uma simples API para fixar os conceitos de NodeJS aprendido no bootcamp GoStack. A inferface tem como intuito gerenciar um reposit칩rios permitindo: criar, listar, atualizar, remover e interagir com likes.",
    "version": "1.0.0",
    "title": "GoStack Desafio 02 - API Reposit칩rios"
  },
  "host": "fs69pn4rw8.execute-api.us-east-1.amazonaws.com",
  "basePath": "/dev",
  "schemes": [
    "https"
  ],
  "paths": {
    "/repositories": {
      "get": {
        "tags": [
          "Reposit칩rios"
        ],
        "summary": "Lista todos os reposit칩rios dispon칤veis",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Repositories"
            }
          },
          "400": {
            "description": "JSON com formata칞칚o inv치lida",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Par칙metro n칚o encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      },
      "post": {
        "tags": [
          "Reposit칩rios"
        ],
        "summary": "Insere um novo reposit칩rio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/pdf",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Repositories"
            }
          },
          "400": {
            "description": "JSON com formata칞칚o inv치lida",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Par칙metro n칚o encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/repositories/{id}": {
      "put": {
        "tags": [
          "Reposit칩rios"
        ],
        "summary": "Atualiza dados de um reposit칩rio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifica칞칚o do reposit칩rio",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Repositories"
            }
          },
          "400": {
            "description": "JSON com formata칞칚o inv치lida",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Par칙metro n칚o encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      },
      "delete": {
        "tags": [
          "Reposit칩rios"
        ],
        "summary": "Deleta um reposit칩rio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Identifica칞칚o do reposit칩rio",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso"
          },
          "400": {
            "description": "JSON com formata칞칚o inv치lida",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Par칙metro n칚o encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    },
    "/repositories/{id}/like": {
      "post": {
        "tags": [
          "Reposit칩rios"
        ],
        "summary": "Adiciona um like ao reposit칩rio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifica칞칚o do reposit칩rio",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Repositories"
            }
          },
          "400": {
            "description": "JSON com formata칞칚o inv치lida",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Par칙metro n칚o encontrado"
          },
          "500": {
            "description": "Erro interno"
          }
        }
      }
    }
  },
  "definitions": {
    "Payload": {
      "description": "Dados dos reposit칩rios",
      "properties": {
        "title": {
          "type": "string",
          "description": "T칤tulo",
          "example": "Aprendendo NodeJS"
        },
        "url": {
          "type": "string",
          "description": "Autor",
          "example": "https://nodejs.org/en/"
        },
        "techs": {
          "type": "array",
          "example": [
            "express"
          ]
        }
      }
    },
    "Repositories": {
      "description": "Lista os repositorios",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "T칤tulo",
          "example": "Aprendendo NodeJS"
        },
        "url": {
          "type": "string",
          "description": "Autor",
          "example": "https://nodejs.org/en/"
        },
        "techs": {
          "type": "array",
          "example": [
            "express",
            "reactJS",
            "nodeJS"
          ]
        },
        "likes": {
          "type": "number",
          "example": 1
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Descri칞칚o do erro",
          "example": "Invalid project id 游땬"
        },
        "code": {
          "type": "string",
          "description": "C칩digo do erro",
          "example": "400"
        }
      }
    }
  }
}